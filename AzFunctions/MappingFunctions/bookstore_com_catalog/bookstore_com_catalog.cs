////////////////////////////////////////////////////////////////////////
//
// bookstore_com_catalog.cs
//
// This file was generated by MapForce 2021r3.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the MapForce Documentation for further details.
// http://www.altova.com/mapforce
//
////////////////////////////////////////////////////////////////////////
		
namespace bookstore_com_catalog
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}



namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}


		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES

	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_ENTITY]); }}


		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY

	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_ID]); }}


		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID

	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_IDREF]); }}


		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF

	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_IDREFS]); }}


		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS

	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_NCName]); }}


		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName

	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}


		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN

	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}


		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS

	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_NOTATION]); }}


		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION

	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_Name]); }}


		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name

	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_QName]); }}


		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName

	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}


		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType

	public class anyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_anyType]); }}


		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType

	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_anyURI]); }}


		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI

	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_base64Binary]); }}


		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary

	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_boolean]); }}


		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean

	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_byte2]); }}


		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2

	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_date]); }}


		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date

	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_dateTime]); }}


		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime

	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_decimal2]); }}


		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2

	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_double2]); }}


		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2

	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_duration]); }}


		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration

	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_float2]); }}


		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2

	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_gDay]); }}


		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay

	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_gMonth]); }}


		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth

	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}


		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay

	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_gYear]); }}


		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear

	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}


		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth

	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_hexBinary]); }}


		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary

	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_int2]); }}


		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2

	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_integer]); }}


		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer

	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_language]); }}


		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language

	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_long2]); }}


		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2

	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}


		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger

	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}


		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger

	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}


		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger

	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_normalizedString]); }}


		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString

	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}


		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger

	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_short2]); }}


		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2

	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_string2]); }}


		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2

	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_time]); }}


		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time

	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_token]); }}


		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token

	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}


		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte

	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}


		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt

	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}


		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong

	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}


		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort

	public class stringType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_stringType]); }}


		public stringType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new stringType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class stringType

	public class floatType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_floatType]); }}


		public floatType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new floatType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public float Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_floatType_altova_unnamed];
				return (float)Altova.Xml.XmlTreeOperations.CastToDouble(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_floatType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("float", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class floatType

	public class dateType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_xs_altova_dateType]); }}


		public dateType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new dateType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public Altova.Types.DateTime Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_dateType_altova_unnamed];
				return (Altova.Types.DateTime)Altova.Xml.XmlTreeOperations.CastToDateTime(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_xs_altova_dateType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("date", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class dateType


} // namespace xs

	public class bookstore_com_catalog : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_altova_bookstore_com_catalog]); }}


		public static bookstore_com_catalog LoadFromFile(string filename) 
		{
			return new bookstore_com_catalog(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static bookstore_com_catalog LoadFromString(string xmlstring) 
		{
			return new bookstore_com_catalog(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static bookstore_com_catalog LoadFromBinary(byte[] binary) 
		{
			return new bookstore_com_catalog(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, false, "\r\n");
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, omitXmlDecl, "\r\n");
		}

		public void SaveToFileWithLineEnd(string filename, bool prettyPrint, bool omitXmlDecl, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint, omitXmlDecl, lineend);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, lineend);
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, "\r\n" );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, false, encoding, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, bool bBigEndian, bool bBOM, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint, omitXmlDecl, lineend);
		}

		public string SaveToString(bool prettyPrint)
		{
			return SaveToString( prettyPrint, false);
		}

		public string SaveToString(bool prettyPrint, bool omitXmlDecl)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint, omitXmlDecl);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static bookstore_com_catalog CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static bookstore_com_catalog CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new bookstore_com_catalog(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}

		static public void DeclareAllNamespacesFromSchema(Altova.Xml.ElementType node)
		{
			foreach (var ns in bookstore_com_catalog_TypeInfo.binder.Namespaces)
				if (ns.namespaceURI != "")
					node.DeclareNamespace(ns.prefix, ns.namespaceURI);
		}


		public bookstore_com_catalog(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			catalog = new MemberElement_catalog (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookstore_com_catalog_altova_catalog]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new bookstore_com_catalog((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_catalog catalog;
		public class MemberElement_catalog : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_catalog (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public catalogType this [int i] { get { return At(i);} } 
			public catalogType At(int index) {return new catalogType(owner.GetElementAt(info, index));}
			public catalogType First { get  {return new catalogType(owner.GetElementFirst(info));} }
			public catalogType Last { get {return new catalogType(owner.GetElementLast(info));} }
			public catalogType Append(){return new catalogType(owner.CreateElement(info));}
			public catalogType AppendWithPrefix(string prefix) {return new catalogType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new catalogType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("bookstore_com_catalog", "https://bookstore.com/catalog")); 				
		}
		
	} // class bookstore_com_catalog

	public class catalogType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_altova_catalogType]); }}


		public catalogType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			book = new MemberElement_book (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_catalogType_altova_book]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new catalogType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_book book;
		public class MemberElement_book : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_book (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public bookType this [int i] { get { return At(i);} } 
			public bookType At(int index) {return new bookType(owner.GetElementAt(info, index));}
			public bookType First { get  {return new bookType(owner.GetElementFirst(info));} }
			public bookType Last { get {return new bookType(owner.GetElementLast(info));} }
			public bookType Append(){return new bookType(owner.CreateElement(info));}
			public bookType AppendWithPrefix(string prefix) {return new bookType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new bookType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class catalogType

	public class bookType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(bookstore_com_catalog_TypeInfo.binder.Types[bookstore_com_catalog_TypeInfo._altova_ti_altova_bookType]); }}


		public bookType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			id = new MemberAttribute_id (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_id]);

			author = new MemberElement_author (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_author]);
			title = new MemberElement_title (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_title]);
			genre = new MemberElement_genre (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_genre]);
			price = new MemberElement_price (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_price]);
			publish_date = new MemberElement_publish_date (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_publish_date]);
			description = new MemberElement_description (this, bookstore_com_catalog_TypeInfo.binder.Members[bookstore_com_catalog_TypeInfo._altova_mi_altova_bookType_altova_description]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new bookType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_id id;
		public class MemberAttribute_id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_author author;
		public class MemberElement_author : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_author (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_title title;
		public class MemberElement_title : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_title (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_genre genre;
		public class MemberElement_genre : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_genre (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_price price;
		public class MemberElement_price : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_price (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.floatType this [int i] { get { return At(i);} } 
			public xs.floatType At(int index) {return new xs.floatType(owner.GetElementAt(info, index));}
			public xs.floatType First { get  {return new xs.floatType(owner.GetElementFirst(info));} }
			public xs.floatType Last { get {return new xs.floatType(owner.GetElementLast(info));} }
			public xs.floatType Append(){return new xs.floatType(owner.CreateElement(info));}
			public xs.floatType AppendWithPrefix(string prefix) {return new xs.floatType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.floatType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_publish_date publish_date;
		public class MemberElement_publish_date : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_publish_date (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.dateType this [int i] { get { return At(i);} } 
			public xs.dateType At(int index) {return new xs.dateType(owner.GetElementAt(info, index));}
			public xs.dateType First { get  {return new xs.dateType(owner.GetElementFirst(info));} }
			public xs.dateType Last { get {return new xs.dateType(owner.GetElementLast(info));} }
			public xs.dateType Append(){return new xs.dateType(owner.CreateElement(info));}
			public xs.dateType AppendWithPrefix(string prefix) {return new xs.dateType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.dateType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_description description;
		public class MemberElement_description : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_description (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}		
	} // class bookType


}
